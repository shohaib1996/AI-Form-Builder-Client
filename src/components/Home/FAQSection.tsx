"use client"

import { motion, easeInOut } from "framer-motion"
import { useState } from "react"
import { ChevronDown } from "lucide-react"

const fadeInUp = {
  initial: { opacity: 0, y: 60 },
  animate: { opacity: 1, y: 0 },
  transition: { duration: 0.6 },
}

const staggerContainer = {
  animate: {
    transition: {
      staggerChildren: 0.1,
    },
  },
}

const bubbleVariants = {
  animate: {
    y: [0, -20, 0],
    opacity: [0.3, 0.8, 0.3],
    scale: [1, 1.2, 1],
    transition: {
      duration: 4,
      repeat: Number.POSITIVE_INFINITY,
      ease: easeInOut,
    },
  },
}

const faqs = [
  {
    question: "What is an 'AI Form Generator'?",
    answer:
      "An AI Form Generator is a smart tool that uses artificial intelligence to automatically create professional forms, surveys, and quizzes based on your natural language descriptions. Simply tell it what kind of form you need, and it will generate a complete, functional form with appropriate fields, validation, and styling.",
  },
  {
    question: "How does the AI Form Generator work?",
    answer:
      "Our AI analyzes your text prompt to understand what type of form you need, then automatically generates the appropriate form fields, validation rules, and layout. It uses advanced natural language processing to interpret your requirements and creates forms that match industry best practices and user experience standards.",
  },
  {
    question: "Can I use the AI Form Generator for free?",
    answer:
      "Yes! We offer a free tier that allows you to generate and use basic forms. Our free plan includes form generation, basic customization, and data collection for up to 100 submissions per month. For advanced features and higher limits, we offer premium plans.",
  },
  {
    question: "Is the AI Form Generator easy to use?",
    answer:
      "Our AI Form Generator is designed to be incredibly user-friendly. You don't need any coding or technical skills. Simply describe what kind of form you want in plain English, and our AI will create it for you in seconds. You can then customize colors, fields, and settings with our intuitive interface.",
  },
  {
    question: "Can I customize the forms generated by the AI?",
    answer:
      "Yes, you have full control over customization! After the AI generates your form, you can modify fields, change styling, add your branding, adjust validation rules, and configure advanced features like conditional logic, integrations, and custom thank-you pages. The AI creates a solid foundation that you can tailor to your exact needs.",
  },
]

interface FAQItemProps {
  question: string
  answer: string
  isOpen: boolean
  onToggle: () => void
  index: number
}

function FAQItem({ question, answer, isOpen, onToggle }: FAQItemProps) {
  return (
    <motion.div
      className="border border-border rounded-lg overflow-hidden backdrop-blur-sm bg-background/80"
      variants={fadeInUp}
      whileHover={{ scale: 1.01 }}
      transition={{ type: "spring", stiffness: 300 }}
    >
      <button
        className="w-full px-6 py-4 text-left flex items-center justify-between hover:bg-muted/50 transition-colors"
        onClick={onToggle}
      >
        <h3 className="text-lg font-semibold pr-4">{question}</h3>
        <motion.div animate={{ rotate: isOpen ? 180 : 0 }} transition={{ duration: 0.2 }}>
          <ChevronDown className="w-5 h-5 text-muted-foreground" />
        </motion.div>
      </button>
      <motion.div
        initial={false}
        animate={{
          height: isOpen ? "auto" : 0,
          opacity: isOpen ? 1 : 0,
        }}
        transition={{ duration: 0.3, ease: "easeInOut" }}
        className="overflow-hidden"
      >
        <div className="px-6 pb-4">
          <p className="text-muted-foreground leading-relaxed">{answer}</p>
        </div>
      </motion.div>
    </motion.div>
  )
}

function AnimatedBubbles() {
  const bubbles = Array.from({ length: 8 }, (_, i) => ({
    id: i,
    size: Math.random() * 100 + 50,
    left: Math.random() * 100,
    top: Math.random() * 100,
    delay: Math.random() * 2,
  }))

  return (
    <div className="absolute inset-0 overflow-hidden pointer-events-none">
      {bubbles.map((bubble) => (
        <motion.div
          key={bubble.id}
          className="absolute rounded-full bg-gradient-to-br from-purple-400/20 to-pink-400/20 dark:from-purple-500/30 dark:to-pink-500/30"
          style={{
            width: bubble.size,
            height: bubble.size,
            left: `${bubble.left}%`,
            top: `${bubble.top}%`,
          }}
          variants={bubbleVariants}
          initial="initial"
          animate="animate"
          transition={{
            ...bubbleVariants.animate.transition,
            delay: bubble.delay,
            ease: "easeInOut",
          }}
        />
      ))}
    </div>
  )
}

export function FAQSection() {
  const [openItems, setOpenItems] = useState<number[]>([])

  const toggleItem = (index: number) => {
    setOpenItems((prev) => (prev.includes(index) ? prev.filter((i) => i !== index) : [...prev, index]))
  }

  return (
    <section className="relative py-20 px-4 bg-gradient-to-br from-slate-50 via-purple-50/50 to-pink-50/30 dark:from-slate-900 dark:via-purple-900/20 dark:to-pink-900/10 overflow-hidden">
      <AnimatedBubbles />

      {/* Additional floating elements */}
      <motion.div
        className="absolute top-20 left-10 w-32 h-32 rounded-full bg-gradient-to-r from-blue-400/10 to-purple-400/10 dark:from-blue-500/20 dark:to-purple-500/20"
        animate={{
          x: [0, 30, 0],
          y: [0, -20, 0],
          opacity: [0.3, 0.6, 0.3],
        }}
        transition={{
          duration: 6,
          repeat: Number.POSITIVE_INFINITY,
          ease: "easeInOut",
        }}
      />

      <motion.div
        className="absolute bottom-20 right-10 w-24 h-24 rounded-full bg-gradient-to-r from-pink-400/10 to-orange-400/10 dark:from-pink-500/20 dark:to-orange-500/20"
        animate={{
          x: [0, -25, 0],
          y: [0, 15, 0],
          opacity: [0.4, 0.7, 0.4],
        }}
        transition={{
          duration: 5,
          repeat: Number.POSITIVE_INFINITY,
          ease: "easeInOut",
          delay: 1,
        }}
      />

      <div className="container mx-auto relative z-10">
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
        >
          <h2 className="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-purple-600 to-pink-600 dark:from-purple-400 dark:to-pink-400 bg-clip-text text-transparent">
            FAQs
          </h2>
          <p className="text-xl text-muted-foreground">Everything you need to know about our AI Form Generator</p>
        </motion.div>

        <motion.div
          className="space-y-4 relative z-10"
          variants={staggerContainer}
          initial="initial"
          whileInView="animate"
          viewport={{ once: true }}
        >
          {faqs.map((faq, index) => (
            <FAQItem
              key={index}
              question={faq.question}
              answer={faq.answer}
              isOpen={openItems.includes(index)}
              onToggle={() => toggleItem(index)}
              index={index}
            />
          ))}
        </motion.div>
      </div>
    </section>
  )
}
